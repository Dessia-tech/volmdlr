# -*- coding: utf-8 -*-
"""

"""

import volmdlr.cloud
import volmdlr.core
import volmdlr as vm
import volmdlr.wires as vmw
import volmdlr.faces as vmf
import volmdlr.edges as vme
import matplotlib.pyplot as plt


################### READ STL
# cloud3d_assembly_forbidden = volmdlr.cloud.PointCloud3D.from_stl('E:\\RENAULT\\3D\\Moteur_STL\\assembly_forbidden.stl')
# faces_assembly_forbidden = cloud3d_assembly_forbidden.subdescription_2d()

# cloud3d_engine_body = volmdlr.cloud.PointCloud3D.from_stl('E:\\RENAULT\\3D\\Moteur_STL\\engine_body_sans_bdme8.stl')
# faces_engine_body = cloud3d_engine_body.subdescription_2d()

# cloud3d_side_part = volmdlr.cloud.PointCloud3D.from_stl('E:\\RENAULT\\3D\\Moteur_STL\\side_part.stl')
# faces_side_part = cloud3d_side_part.subdescription_2d(resolution=20)

# # cloud3d_wind_part = volmdlr.cloud.PointCloud3D.from_stl('E:\\RENAULT\\3D\\Moteur_STL\\wind_part.stl')
# # faces_wind_part = cloud3d_wind_part.subdescription_2d(resolution=20)

# # # volum = volmdlr.core.VolumeModel(faces_assembly_forbidden + #faces_engine_body +
# # #                                   faces_side_part + faces_wind_part)
# volum = volmdlr.core.VolumeModel(faces_side_part)

# # volum.save_to_file('engine_body_sans_bdme8')

# # new_volum = volmdlr.core.VolumeModel.load_from_file('wind_part.json')

# volum.babylonjs()

################### DEBUG
# points_poly0 = [vm.Point3D(-0.02785286331176758, 0.14365164184570312, 0.16285931396484374),
#                 vm.Point3D(-0.039570194244384765, 0.14255133056640626, 0.16285931396484374),
#                 vm.Point3D(-0.04901511764526367, 0.14049978637695312, 0.16285931396484374),
#                 vm.Point3D(-0.05265781402587891, 0.138816650390625, 0.16285931396484374),
#                 vm.Point3D(-0.05629143524169922, 0.1368720245361328, 0.16285931396484374),
#                 vm.Point3D(-0.06060961151123047, 0.1323123321533203, 0.16285931396484374),
#                 vm.Point3D(-0.06237499237060547, 0.12723016357421876, 0.16285931396484374),
#                 vm.Point3D(-0.06580715942382813, 0.11276873016357422, 0.16285931396484374),
#                 vm.Point3D(-0.06730508422851562, 0.09772169494628906, 0.16285931396484374),
#                 vm.Point3D(-0.06716297912597656, 0.09380774688720703, 0.16285931396484374),
#                 vm.Point3D(-0.06691159057617188, 0.08986341857910156, 0.16285931396484374),
#                 vm.Point3D(-0.06653813171386719, 0.08590738677978516, 0.16285931396484374),
#                 vm.Point3D(-0.06329383087158204, 0.07401349639892578, 0.16285931396484374),
#                 vm.Point3D(-0.05981048965454101, 0.06631576538085937, 0.16285931396484374),
#                 vm.Point3D(-0.01858608627319336, -0.0005872868895530701, 0.16285931396484374),
#                 vm.Point3D(0.004057138919830322, -0.026433467864990234, 0.16285931396484374),
#                 vm.Point3D(0.004993902683258057, -0.027147762298583983, 0.16285931396484374),
#                 vm.Point3D(0.0060211563110351566, -0.02774390983581543, 0.16285931396484374),
#                 vm.Point3D(0.007130794048309326, -0.02821550941467285, 0.16285931396484374),
#                 vm.Point3D(0.008299141883850098, -0.028550893783569335, 0.16285931396484374),
#                 vm.Point3D(0.009508121490478515, -0.02874489402770996, 0.16285931396484374),
#                 vm.Point3D(0.01073911190032959, -0.02879453659057617, 0.16285931396484374),
#                 vm.Point3D(0.011898954391479493, -0.02870889663696289, 0.16285931396484374),
#                 vm.Point3D(0.01304564380645752, -0.028496240615844725, 0.16285931396484374),
#                 vm.Point3D(0.037929359436035155, -0.023318639755249025, 0.16285931396484374),
#                 vm.Point3D(0.04026692581176758, -0.022659902572631837, 0.16285931396484374),
#                 vm.Point3D(0.0423753433227539, -0.02173179054260254, 0.16285931396484374),
#                 vm.Point3D(0.043635421752929685, -0.021140312194824217, 0.16285931396484374),
#                 vm.Point3D(0.045726459503173826, -0.019112783432006834, 0.16285931396484374),
#                 vm.Point3D(0.046045814514160156, -0.018350631713867187, 0.16285931396484374),
#                 vm.Point3D(0.046317790985107424, -0.017561525344848634, 0.16285931396484374),
#                 vm.Point3D(0.04654034042358399, -0.01675141906738281, 0.16285931396484374),
#                 vm.Point3D(0.046711788177490235, -0.015926435470581056, 0.16285931396484374),
#                 vm.Point3D(0.053979331970214844, 0.020638671875, 0.16285931396484374),
#                 vm.Point3D(0.053991470336914066, 0.020810815811157228, 0.16285931396484374),
#                 vm.Point3D(0.053973892211914065, 0.020982486724853516, 0.16285931396484374),
#                 vm.Point3D(0.05395987319946289, 0.021073774337768556, 0.16285931396484374),
#                 vm.Point3D(0.05268712615966797, 0.025928991317749023, 0.16285931396484374),
#                 vm.Point3D(0.05260356140136719, 0.026217063903808593, 0.16285931396484374),
#                 vm.Point3D(0.0053228259086608885, 0.1313191223144531, 0.16285931396484374),
#                 vm.Point3D(0.00030017581582069395, 0.13677394104003907, 0.16285931396484374),
#                 vm.Point3D(-0.0014313015937805177, 0.1385874481201172, 0.16285931396484374),
#                 vm.Point3D(-0.003362513303756714, 0.14024832153320313, 0.16285931396484374),
#                 vm.Point3D(-0.013057180404663086, 0.14319378662109375, 0.16285931396484374)]

# polygon0 = vmw.ClosedPolygon3D(points_poly0)

# points_poly1 = [vm.Point3D(-0.032552875518798825, 0.18903926086425782, 0.21148847113715277),
#                 vm.Point3D(-0.03902994537353516, 0.18896835327148437, 0.21148847113715277),
#                 vm.Point3D(-0.045451812744140625, 0.1882697296142578, 0.21148847113715277),
#                 vm.Point3D(-0.05175935745239258, 0.1869498291015625, 0.21148847113715277),
#                 vm.Point3D(-0.05789449310302734, 0.1850208282470703, 0.21148847113715277),
#                 vm.Point3D(-0.06380073547363281, 0.18250044250488281, 0.21148847113715277),
#                 vm.Point3D(-0.0719752426147461, 0.1776184539794922, 0.21148847113715277),
#                 vm.Point3D(-0.07209098815917969, 0.1775470428466797, 0.21148847113715277),
#                 vm.Point3D(-0.07238782501220703, 0.1773623504638672, 0.21148847113715277),
#                 vm.Point3D(-0.07606041717529297, 0.1748844451904297, 0.21148847113715277),
#                 vm.Point3D(-0.07725887298583985, 0.17399330139160157, 0.21148847113715277),
#                 vm.Point3D(-0.07953073883056641, 0.17218084716796875, 0.21148847113715277),
#                 vm.Point3D(-0.08017269134521485, 0.1716375732421875, 0.21148847113715277),
#                 vm.Point3D(-0.08216158294677735, 0.16985983276367186, 0.21148847113715277),
#                 vm.Point3D(-0.0828564682006836, 0.16920291137695312, 0.21148847113715277),
#                 vm.Point3D(-0.08401498413085938, 0.16806324768066405, 0.21148847113715277),
#                 vm.Point3D(-0.08599291229248048, 0.16597808837890626, 0.21148847113715277),
#                 vm.Point3D(-0.08663853454589844, 0.1652559356689453, 0.21148847113715277),
#                 vm.Point3D(-0.08756526947021484, 0.16418037414550782, 0.21148847113715277),
#                 vm.Point3D(-0.0890186538696289, 0.16245500183105469, 0.21148847113715277),
#                 vm.Point3D(-0.09172274780273437, 0.1587900390625, 0.21148847113715277),
#                 vm.Point3D(-0.09418171691894531, 0.154925537109375, 0.21148847113715277),
#                 vm.Point3D(-0.09641954040527344, 0.1508263854980469, 0.21148847113715277),
#                 vm.Point3D(-0.09834632873535157, 0.14665037536621095, 0.21148847113715277),
#                 vm.Point3D(-0.09998783874511719, 0.14234471130371093, 0.21148847113715277),
#                 vm.Point3D(-0.1013353042602539, 0.1379343566894531, 0.21148847113715277),
#                 vm.Point3D(-0.10238275909423829, 0.1334447784423828, 0.21148847113715277),
#                 vm.Point3D(-0.10312690734863281, 0.1289015655517578, 0.21148847113715277),
#                 vm.Point3D(-0.10356690216064453, 0.12442110443115234, 0.21148847113715277),
#                 vm.Point3D(-0.10372638702392578, 0.11988057708740234, 0.21148847113715277),
#                 vm.Point3D(-0.10359210968017578, 0.11535820007324218, 0.21148847113715277),
#                 vm.Point3D(-0.10305767822265625, 0.11002735900878906, 0.21148847113715277),
#                 vm.Point3D(-0.10212653350830078, 0.10477787017822265, 0.21148847113715277),
#                 vm.Point3D(-0.10080961608886718, 0.09963277435302734, 0.21148847113715277),
#                 vm.Point3D(-0.10000993347167969, 0.09710636138916015, 0.21148847113715277),
#                 vm.Point3D(-0.09911802673339844, 0.09461454010009765, 0.21148847113715277),
#                 vm.Point3D(-0.09813543701171876, 0.09216036987304688, 0.21148847113715277),
#                 vm.Point3D(-0.03370913696289062, -0.058159008026123046, 0.21148847113715277),
#                 vm.Point3D(-0.032856101989746096, -0.05874211883544922, 0.21148847113715277),
#                 vm.Point3D(-0.0319820327758789, -0.05931711578369141, 0.21148847113715277),
#                 vm.Point3D(-0.031112964630126954, -0.05986687088012695, 0.21148847113715277),
#                 vm.Point3D(-0.0296524658203125, -0.0595878791809082, 0.21148847113715277),
#                 vm.Point3D(-0.02444703483581543, -0.05800255584716797, 0.21148847113715277),
#                 vm.Point3D(0.057712776184082035, -0.030171194076538087, 0.21148847113715277),
#                 vm.Point3D(0.08078765106201172, -0.022217842102050783, 0.21148847113715277),
#                 vm.Point3D(0.08118883514404297, -0.022066390991210938, 0.21148847113715277),
#                 vm.Point3D(0.08125575256347656, -0.02203432846069336, 0.21148847113715277),
#                 vm.Point3D(0.08161629486083985, -0.021821744918823244, 0.21148847113715277),
#                 vm.Point3D(0.08168018341064454, -0.02177606773376465, 0.21148847113715277),
#                 vm.Point3D(0.08199049377441406, -0.021510107040405273, 0.21148847113715277),
#                 vm.Point3D(0.08204832458496093, -0.021450748443603517, 0.21148847113715277),
#                 vm.Point3D(0.0823005142211914, -0.021140567779541014, 0.21148847113715277),
#                 vm.Point3D(0.08234918975830079, -0.02106806182861328, 0.21148847113715277),
#                 vm.Point3D(0.08253732299804688, -0.020723901748657226, 0.21148847113715277),
#                 vm.Point3D(0.08255496215820313, -0.020684097290039064, 0.21148847113715277),
#                 vm.Point3D(0.08257383728027344, -0.020639404296875, 0.21148847113715277),
#                 vm.Point3D(0.08259023284912109, -0.020598588943481447, 0.21148847113715277),
#                 vm.Point3D(0.08260577392578125, -0.020557939529418947, 0.21148847113715277),
#                 vm.Point3D(0.08273110198974609, -0.020096532821655272, 0.21148847113715277),
#                 vm.Point3D(0.09306076049804687, 0.023186473846435546, 0.21148847113715277),
#                 vm.Point3D(0.09339018249511719, 0.07300833129882812, 0.21148847113715277),
#                 vm.Point3D(0.018647174835205078, 0.1631864013671875, 0.21148847113715277),
#                 vm.Point3D(0.014239314079284669, 0.16812294006347656, 0.21148847113715277),
#                 vm.Point3D(0.009396167755126953, 0.17262370300292967, 0.21148847113715277),
#                 vm.Point3D(0.004162330150604248, 0.17664724731445314, 0.21148847113715277),
#                 vm.Point3D(-0.0014140068292617799, 0.18015653991699218, 0.21148847113715277),
#                 vm.Point3D(-0.007281498908996582, 0.1831192626953125, 0.21148847113715277),
#                 vm.Point3D(-0.013386120796203613, 0.1855081329345703, 0.21148847113715277),
#                 vm.Point3D(-0.019671663284301758, 0.1873011474609375, 0.21148847113715277),
#                 vm.Point3D(-0.026080251693725586, 0.18848182678222655, 0.21148847113715277)]

# polygon1 = vmw.ClosedPolygon3D(points_poly1)

# points_poly2 = [vm.Point3D(-0.008207533836364746, 0.2508453674316406, 0.2601176283094618),
#                 vm.Point3D(-0.084091064453125, 0.16704635620117186, 0.2601176283094618),
#                 vm.Point3D(-0.08809623718261719, 0.16201771545410157, 0.2601176283094618),
#                 vm.Point3D(-0.09159443664550782, 0.15660951232910156, 0.2601176283094618),
#                 vm.Point3D(-0.09953105926513672, 0.1430395965576172, 0.2601176283094618),
#                 vm.Point3D(-0.09999156951904296, 0.14165376281738282, 0.2601176283094618),
#                 vm.Point3D(-0.10108388519287109, 0.13786744689941408, 0.2601176283094618),
#                 vm.Point3D(-0.1022943344116211, 0.13339891052246095, 0.2601176283094618),
#                 vm.Point3D(-0.10301695251464844, 0.12882789611816406, 0.2601176283094618),
#                 vm.Point3D(-0.1034316177368164, 0.12422869873046875, 0.2601176283094618),
#                 vm.Point3D(-0.10370508575439454, 0.11975404357910156, 0.2601176283094618),
#                 vm.Point3D(-0.10354524993896484, 0.11519697570800781, 0.2601176283094618),
#                 vm.Point3D(-0.10297544097900391, 0.10982662963867187, 0.2601176283094618),
#                 vm.Point3D(-0.1025392303466797, 0.10717151641845703, 0.2601176283094618),
#                 vm.Point3D(-0.10200409698486328, 0.10454054260253906, 0.2601176283094618),
#                 vm.Point3D(-0.10137150573730469, 0.1019366455078125, 0.2601176283094618),
#                 vm.Point3D(-0.10064292907714843, 0.09936270904541016, 0.2601176283094618),
#                 vm.Point3D(-0.0998199005126953, 0.0968216323852539, 0.2601176283094618),
#                 vm.Point3D(-0.09890399932861328, 0.09431640625, 0.2601176283094618),
#                 vm.Point3D(-0.03711124801635742, -0.059255661010742186, 0.2601176283094618),
#                 vm.Point3D(-0.03666657257080078, -0.06018813705444336, 0.2601176283094618),
#                 vm.Point3D(-0.03661773681640625, -0.06027912902832031, 0.2601176283094618),
#                 vm.Point3D(-0.03604153823852539, -0.06109286117553711, 0.2601176283094618),
#                 vm.Point3D(-0.031743526458740234, -0.06654579162597657, 0.2601176283094618),
#                 vm.Point3D(-0.03086210060119629, -0.06740702056884766, 0.2601176283094618),
#                 vm.Point3D(-0.029855182647705078, -0.06803736877441406, 0.2601176283094618),
#                 vm.Point3D(-0.02984282684326172, -0.06804441070556641, 0.2601176283094618),
#                 vm.Point3D(-0.029214427947998046, -0.06835525512695312, 0.2601176283094618),
#                 vm.Point3D(-0.02915687370300293, -0.0683835678100586, 0.2601176283094618),
#                 vm.Point3D(-0.02816290283203125, -0.06875208282470703, 0.2601176283094618),
#                 vm.Point3D(-0.01601919746398926, -0.07303746795654296, 0.2601176283094618),
#                 vm.Point3D(-0.015049818992614747, -0.07336737823486328, 0.2601176283094618),
#                 vm.Point3D(-0.014826391220092773, -0.07343647003173828, 0.2601176283094618),
#                 vm.Point3D(-0.013791533470153808, -0.0735477294921875, 0.2601176283094618),
#                 vm.Point3D(-0.013688020706176758, -0.07355876922607422, 0.2601176283094618),
#                 vm.Point3D(-0.011684782028198242, -0.07364190673828125, 0.2601176283094618),
#                 vm.Point3D(-0.01074007511138916, -0.07354588317871094, 0.2601176283094618),
#                 vm.Point3D(-0.010693093299865723, -0.07354100799560546, 0.2601176283094618),
#                 vm.Point3D(-0.009747095108032226, -0.07325525665283203, 0.2601176283094618),
#                 vm.Point3D(0.07549286651611328, -0.03827386093139649, 0.2601176283094618),
#                 vm.Point3D(0.07594464111328125, -0.03804726409912109, 0.2601176283094618),
#                 vm.Point3D(0.0763506851196289, -0.03774609756469727, 0.2601176283094618),
#                 vm.Point3D(0.07669914245605469, -0.037379138946533205, 0.2601176283094618),
#                 vm.Point3D(0.07695381164550781, -0.037093746185302735, 0.2601176283094618),
#                 vm.Point3D(0.07722650909423828, -0.036680694580078124, 0.2601176283094618),
#                 vm.Point3D(0.07736872100830078, -0.03637439727783203, 0.2601176283094618),
#                 vm.Point3D(0.0775263900756836, -0.03600359344482422, 0.2601176283094618),
#                 vm.Point3D(0.07754278564453125, -0.035962779998779296, 0.2601176283094618),
#                 vm.Point3D(0.07755848693847656, -0.03592169570922851, 0.2601176283094618),
#                 vm.Point3D(0.0776082763671875, -0.03577490234375, 0.2601176283094618),
#                 vm.Point3D(0.0971041488647461, 0.029485403060913087, 0.2601176283094618),
#                 vm.Point3D(0.09790062713623048, 0.0323336067199707, 0.2601176283094618),
#                 vm.Point3D(0.09856843566894531, 0.03556864929199219, 0.2601176283094618),
#                 vm.Point3D(0.09909113311767578, 0.03911087799072266, 0.2601176283094618),
#                 vm.Point3D(0.09945584869384766, 0.042873065948486326, 0.2601176283094618),
#                 vm.Point3D(0.09965361022949219, 0.046762580871582034, 0.2601176283094618),
#                 vm.Point3D(0.09967953491210937, 0.050683643341064455, 0.2601176283094618),
#                 vm.Point3D(0.09953298950195312, 0.054539710998535156, 0.2601176283094618),
#                 vm.Point3D(0.09921759033203124, 0.05823583221435547, 0.2601176283094618),
#                 vm.Point3D(0.0987410888671875, 0.06168099594116211, 0.2601176283094618),
#                 vm.Point3D(0.09811522674560547, 0.06479036712646484, 0.2601176283094618),
#                 vm.Point3D(0.06331784057617187, 0.21443923950195312, 0.2601176283094618),
#                 vm.Point3D(0.06290574645996094, 0.21608450317382813, 0.2601176283094618),
#                 vm.Point3D(0.06269189071655273, 0.21675541687011718, 0.2601176283094618),
#                 vm.Point3D(0.06253605270385743, 0.21719694519042967, 0.2601176283094618),
#                 vm.Point3D(0.06234354019165039, 0.21770094299316406, 0.2601176283094618),
#                 vm.Point3D(0.06169289779663086, 0.21916445922851563, 0.2601176283094618),
#                 vm.Point3D(0.0613367919921875, 0.21985302734375, 0.2601176283094618),
#                 vm.Point3D(0.06043319320678711, 0.22135943603515626, 0.2601176283094618),
#                 vm.Point3D(0.05949412536621094, 0.22266343688964843, 0.2601176283094618),
#                 vm.Point3D(0.05846425247192383, 0.22387586975097656, 0.2601176283094618),
#                 vm.Point3D(0.05762709426879883, 0.22473118591308594, 0.2601176283094618),
#                 vm.Point3D(0.057347785949707034, 0.22499436950683593, 0.2601176283094618),
#                 vm.Point3D(0.056083263397216795, 0.22606521606445312, 0.2601176283094618),
#                 vm.Point3D(0.05604710006713867, 0.22609315490722656, 0.2601176283094618),
#                 vm.Point3D(0.054638179779052734, 0.22708189392089845, 0.2601176283094618),
#                 vm.Point3D(0.05370331573486328, 0.22763909912109376, 0.2601176283094618),
#                 vm.Point3D(0.03403970718383789, 0.2388927764892578, 0.2601176283094618),
#                 vm.Point3D(0.0011959041357040405, 0.25031782531738284, 0.2601176283094618),
#                 vm.Point3D(0.0011366173028945924, 0.25033729553222656, 0.2601176283094618),
#                 vm.Point3D(0.0006921873092651368, 0.25044749450683595, 0.2601176283094618),
#                 vm.Point3D(0.00024115948379039765, 0.25049554443359373, 0.2601176283094618)]

# polygon2 = vmw.ClosedPolygon3D(points_poly2)

# # vec1, vec2 = vm.X3D, vm.Y3D
# # normal = vm.Z3D

# faces = []
# # # coords = polygon1.sewing_with2(polygon2, vec1, vec2, normal)
# coords = polygon1.sewing_with(polygon2)
# for trio in coords :
#     faces.append(vmf.Triangle3D(trio[0], trio[1], trio[2]))
    
# fig = plt.figure()
# ax = fig.add_subplot(111, projection='3d')
# polygon1.plot(ax=ax, color='g')
# polygon2.plot(ax=ax, color='r')
    
# volum = volmdlr.core.VolumeModel(faces)
# volum.babylonjs()  







# side_part = volmdlr.core.VolumeModel.load_from_file('side_part.json')

assembly_forbidden = volmdlr.core.VolumeModel.load_from_file('assembly_forbidden.json')

# wind_part = volmdlr.core.VolumeModel.load_from_file('wind_part.json')

# all_volum = volmdlr.core.VolumeModel(side_part.primitives + assembly_forbidden.primitives)

# all_volum.babylonjs()

